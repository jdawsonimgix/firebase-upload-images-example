[{"/Users/Jamie/Desktop/pre-upload-sessions/client/src/index.js":"1","/Users/Jamie/Desktop/pre-upload-sessions/client/src/App.js":"2"},{"size":467,"mtime":1663880340111,"results":"3","hashOfConfig":"4"},{"size":5353,"mtime":1665446053369,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gnbm3n",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Users/Jamie/Desktop/pre-upload-sessions/client/src/index.js",[],[],"/Users/Jamie/Desktop/pre-upload-sessions/client/src/App.js",["13"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [pic, setPic] = useState();\n  // const [allPics, setAllPics] = useState([]);\n  // const [storedMimetype, setStoredMimtype] = useState(\"maybe jpeg??\");\n  const [sessionData, setSessionData] = useState(\"no session data\");\n  const [sessionSourceId, setSessionSourceId] = useState(\"no session\"); //Used to check status.\n  const [sessionStatus, setSessionStatus] = useState(\"No Status\");\n  const [sessionPresignedUrl, setSessionPresignedUrl] =\n    useState(\"No session URL\"); //Long amazon url\n  const [heldFormData, setHeldFormData] = useState(\"\");\n  useEffect(() => {\n    // getAllPics();\n  }, [sessionData, heldFormData]);\n\n  //IMGIX EXAMPLES: STARTING SESSION\n\n  //I'm now fixing the data being passed around. Check the server for an object that is returnig and fix the react hooks.\n  const imgixHandleSubmitForSessionStarting = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    console.log(\n      \"Below is the formData inside imgixHandleSubmitForSessionStarting\"\n    );\n    formData.append(\"pic\", pic);\n\n    const test = await axios\n      .post(\"http://localhost:5001/startImgixSession\", formData)\n      .then(console.log(\"starting imgix session\"))\n      .catch((error) => console.log(error.message));\n\n    console.log(\"Formdata below from the start:\");\n    console.log(\"test from imgixHandleSubmitForSessionStarting\");\n    console.log(test);\n    setSessionSourceId(test.data.allData.data.attributes.id); //Stores session Source id\n    setSessionStatus(test.data.allData.data.attributes.status);\n    setSessionPresignedUrl(test.data.allData.data.attributes.url);\n    setHeldFormData(test.data.theBufferReturned.data);\n  };\n  const imgixHandleChangeForSessionStarting = (e) => {\n    setPic(e.target.files[0]);\n  };\n\n  //IMGIX EXAMPLE: CHECK SESSION STATUS\n  const imgixHandleCheckStatus = async (e) => {\n    e.preventDefault();\n    console.log(\n      \"I'm in the client imgixHanldeCheckStatus and sessionSourceID is: \" +\n        sessionSourceId\n    );\n    const value = { grabbedSessionSourceID: sessionSourceId };\n\n    //check session\n    const sessionStatusForAxios = await axios\n      .post(\"http://localhost:5001/checkImgixSessionStatus\", value)\n      .then(console.log(\"Check imgix session\"))\n      .catch((error) => console.log(error.message));\n\n    console.log(\"sessionStatusForAxios.data.data.attributes.status is: \");\n    console.log(sessionStatusForAxios.data.data.attributes.status);\n    setSessionStatus(\n      \"Checked: \" + sessionStatusForAxios.data.data.attributes.status\n    );\n  };\n\n  //IMGIX EXAMPLE: CLOSE SESSION\n  const imgixHandleCloseSession = async (e) => {\n    e.preventDefault();\n\n    console.log(\n      \"I'm in the client imgixHanldeCheckStatus and sessionSourceID is: \" +\n        sessionSourceId\n    );\n    const valueData = { grabbedSessionSourceID: sessionSourceId };\n\n    //close session\n    const sessionStatusForAxios = await axios\n      .post(\"http://localhost:5001/checkImgixCloseSession\", valueData)\n      .then(console.log(\"Client - CLOSE imgix session\"))\n      .catch((error) => console.log(error.message));\n\n    console.log(\"sessionStatusForAxios.data.data.attributes.status is: \");\n    console.log(sessionStatusForAxios.data.data.attributes.status);\n    setSessionStatus(\n      \"Checked: \" + sessionStatusForAxios.data.data.attributes.status\n    );\n  };\n\n  //See formData\n  const seeFormData = () => {\n    console.log(JSON.stringify(heldFormData));\n  };\n\n  //IMGIX EXAMPLE: PUT REQUEST WITH PRESIGNED SESSION URL\n  //I NEED IMAGE BINARY!!!\n  //Sending an object worked!!! Now I need to parse the info in the server.js file\n  const sendFormDataPostRequest = async (e) => {\n    e.preventDefault();\n    console.log(\"inside client sendFormDataPost Request\");\n    console.log(\"Below is the formData inside sendFormDataPostRequest\");\n    console.log(heldFormData);\n\n    var neededData = {\n      theFormData: heldFormData,\n      theSessionPresignedUrl: sessionPresignedUrl,\n    };\n\n    //Starting session\n    const test = await axios\n      .post(\"http://localhost:5001/postSession\", neededData)\n      .then(console.log(\"\"))\n      .catch((error) => console.log(error.message));\n\n    console.log(test);\n  };\n\n  return (\n    <div className='app'>\n      <form className='form' onSubmit={imgixHandleSubmitForSessionStarting}>\n        <input type='file' onChange={imgixHandleChangeForSessionStarting} />\n        <button>Starting a session</button>\n      </form>\n      <button onClick={imgixHandleCheckStatus}>Check session status</button>\n      <br />\n      <button onClick={imgixHandleCloseSession}>Close Session</button>\n      <br />\n      {/* <button onClick={viewSessionData}>view session dataa</button> */}\n      <button onClick={seeFormData}>See form data in Console log</button>\n      <br />\n      <button onClick={sendFormDataPostRequest}>\n        Sending formData to Post Request\n      </button>\n      <h3>The sessionSourceId is: {sessionSourceId}</h3>\n      <h3>The sessionStatus is: {sessionStatus}</h3>\n      <h3>The sessionPresignedUrl is: {sessionPresignedUrl}</h3>\n      {/* <h3>minetype is: {storedMimetype}</h3> */}\n    </div>\n  );\n}\n\nexport default App;\n\n/*\nSteps to follow:\n1) Start session\n2) upload with Presigned URL\n3) Close session\n4) Check status.\n\n\n*/\n",{"ruleId":"14","severity":1,"message":"15","line":9,"column":23,"nodeType":"16","messageId":"17","endLine":9,"endColumn":37},"no-unused-vars","'setSessionData' is assigned a value but never used.","Identifier","unusedVar"]